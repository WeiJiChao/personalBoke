<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jwBlog.security.dao.SecurityUserRoleDao">
    <resultMap type="com.jwBlog.security.entity.SecurityUserRoleEntity" id="securityUserRoleMap">
		<result property="userId" column="userId"/>
		<result property="roleId" column="roleId"/>
    </resultMap>

    <sql id="Base_Column_List" >
		userId,
		roleId
    </sql>

	<select id="queryObject" resultType="com.jwBlog.security.entity.SecurityUserRoleEntity" resultMap="securityUserRoleMap">
		select
		<include refid="Base_Column_List" />
		from SecurityUserRole
		where userId = #{value}
	</select>

	<select id="queryList" resultType="com.jwBlog.security.entity.SecurityUserRoleEntity" resultMap="securityUserRoleMap">
		select
		<include refid="Base_Column_List" />
		from SecurityUserRole
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by userId desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

    <select id="queryListByBean" resultType="com.jwBlog.security.entity.SecurityUserRoleEntity" resultMap="securityUserRoleMap">
        select
        <include refid="Base_Column_List" />
        from SecurityUserRole
        WHERE 1=1
    </select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from SecurityUserRole
	</select>
	 
	<insert id="save" parameterType="com.jwBlog.security.entity.SecurityUserRoleEntity">
		insert into SecurityUserRole
		(
			`userId`,
			`roleId`
		)
		values
		<foreach collection="roleIdList" item="item" index="index" separator="," >
		(
		#{userId},
		#{item}
		)
		</foreach>
	</insert>
	 
	<update id="update" parameterType="com.jwBlog.security.entity.SecurityUserRoleEntity">
		update SecurityUserRole
		<set>
			<if test="roleId != null">`roleId` = #{roleId}</if>
		</set>
		where userId = #{userid}
	</update>
	
	<delete id="delete">
		delete from SecurityUserRole where userId = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from SecurityUserRole where userId in
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</delete>
	<!--根据用户list批量删除用户角色中间表-->
	<delete id="deleteBatchByUserId">
		delete from SecurityUserRole where userId in
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</delete>
	<!--根据角色list批量删除用户角色中间表-->
	<delete id="deleteBatchByRoleId">
		delete from SecurityUserRole where roleId in
		<foreach item="roleId" collection="array" open="(" separator="," close=")">
			#{roleId}
		</foreach>
	</delete>

	<select id="queryRoleIdList" resultType="String">
		select roleId from SecurityUserRole where userId = #{value,jdbcType=VARCHAR}
	</select>
</mapper>