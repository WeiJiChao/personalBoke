<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jwBlog.basic.dao.DictionaryDao">
    <resultMap type="com.jwBlog.basic.entity.DictionaryEntity" id="DictionaryMap">
		<result property="id" column="id"/>
		<result property="group_name" column="groupName"/>
		<result property="conf_title" column="confTitle"/>
		<result property="conf_value" column="confValue"/>
		<result property="status" column="status"/>
		<result property="sort_index" column="sortIndex"/>
    </resultMap>
    <sql id="Base_Column_List" >
		a.id,
		a.group_name,
		a.conf_title,
		a.conf_value,
		a.status,
		a.sort_index
    </sql>

	<select id="queryObject" resultType="com.jwBlog.basic.entity.DictionaryEntity" resultMap="DictionaryMap">
		select
		<include refid="Base_Column_List" />
		from dictionary a
		where a.id = #{value}
	</select>

	<select id="queryList" resultType="com.jwBlog.basic.entity.DictionaryEntity" resultMap="DictionaryMap">
		select
		<include refid="Base_Column_List" />
		from dictionary a
        <where>
			<if test="groupName != null and groupName.trim() != ''">
				and a.group_name = #{groupName}
			</if>
			<if test="confTitle != null and confTitle.trim() != ''">
				and a.conf_title = #{type}
			</if>
        </where>
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by a.group_name,a.sort_index desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

    <select id="queryListByBean" resultType="com.jwBlog.basic.entity.DictionaryEntity" resultMap="DictionaryMap">
        select
        <include refid="Base_Column_List" />
		from dictionary a
		<where>
			<if test="groupName != null and groupName.trim() != ''">
				and a.group_name = #{groupName}
			</if>
			<if test="confTitle != null and confTitle.trim() != ''">
				and a.conf_title = #{type}
			</if>
		</where>
		order by a.group_name,a.sort_index desc
    </select>

 	<select id="queryTotal" resultType="int">
		select count(a.id)
		from dictionary a
		<where>
			<if test="groupName != null and groupName.trim() != ''">
				and a.group_name = #{groupName}
			</if>
			<if test="confTitle != null and confTitle.trim() != ''">
				and a.conf_title = #{type}
			</if>
		</where>
	</select>
	 
	<insert id="save" parameterType="com.jwBlog.basic.entity.DictionaryEntity" useGeneratedKeys="true" keyProperty="id">
		insert into dictionary
		(
			`group_name`,
			`conf_title`,
			`conf_value`,
			`status`,
			`sort_index`
		)
		values
		(
			#{groupName},
			#{confTitle},
			#{confValue},
			#{status},
			#{sortIndex}
		)
	</insert>
	 
	<update id="update" parameterType="com.jwBlog.basic.entity.DictionaryEntity">
		update dictionary
		<set>
			<if test="groupName != null">`group_name` = #{groupName}, </if>
			<if test="confTitle != null">`conf_title` = #{confTitle}, </if>
			<if test="confValue != null">`conf_value` = #{confValue}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="sortIndex != null">`sort_index` = #{sortIndex} </if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from dictionary where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from dictionary where id in
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
</mapper>